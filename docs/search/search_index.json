{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IAP 2020: Introduction to Markdown and MkDocs Why? \u00b6 Markdown is a lightweight markup language that: is very easy to pick up; can be converted into many file formats such as PDF, DOCX, EPUB, HTML, etc. using Pandoc ; can generate diagrams such as UML Sequence Diagrams, Flowcharts, Class and State Diagrams; can be used to create a static site, using the static generator MkDocs . Prerequisites \u00b6 Python 3 with pip installed GitHub account Workshop materials \u00b6 Online slide deck PDF slide deck Special thanks to... \u00b6 SUTD Digital Design Developer Student Club (3DC) for organising this IAP conference ; OpenSUTD for allowing me to host my content here; All workshop attendees for attending my workshop! Marp , the Markdown Presentation Ecosystem, which I used to create the slide decks in HTML and PDF. Another project by... \u00b6 \ud83d\udc64 Wei Min Cher @flamanta Please \u2b50\ufe0f this repository on GitHub if this project helped you!","title":"Home"},{"location":"#why","text":"Markdown is a lightweight markup language that: is very easy to pick up; can be converted into many file formats such as PDF, DOCX, EPUB, HTML, etc. using Pandoc ; can generate diagrams such as UML Sequence Diagrams, Flowcharts, Class and State Diagrams; can be used to create a static site, using the static generator MkDocs .","title":"Why?"},{"location":"#prerequisites","text":"Python 3 with pip installed GitHub account","title":"Prerequisites"},{"location":"#workshop-materials","text":"Online slide deck PDF slide deck","title":"Workshop materials"},{"location":"#special-thanks-to","text":"SUTD Digital Design Developer Student Club (3DC) for organising this IAP conference ; OpenSUTD for allowing me to host my content here; All workshop attendees for attending my workshop! Marp , the Markdown Presentation Ecosystem, which I used to create the slide decks in HTML and PDF.","title":"Special thanks to..."},{"location":"#another-project-by","text":"\ud83d\udc64 Wei Min Cher @flamanta Please \u2b50\ufe0f this repository on GitHub if this project helped you!","title":"Another project by..."},{"location":"3DC-IAP/","text":"Info The official website for the 3DC IAP Conference can be found here . What \u00b6 3DC IAP Conference is a collation of related IAP activities to the SUTD community. It happened between 06 January - 23 January 2019 . Why \u00b6 All IAPS are currently conducted individually by separate parties, which are usually a series of talks / activities / workshops that encourage students to pursue their interests. Issues \u00b6 The IAPs may come in odd fashion with beginner events amongst the tougher events. Timings may clash which disallows students from successively attending multiple IAPs. IAP materials are sometimes not shared to the participants. How \u00b6 This IAP conference brings together IAP activities with the aim to widen the learning horizon and deepen the subject knowledge of the SUTD community by complementing the experiential learning component of a student\u2019s experience. The conference allows for the participation in meaningful exchange of ideas through diversified experiences and engagement in advanced technologies. It is also hoped that the centralized planning of IAP activities will lead to greater participation numbers in subsequent batches of SUTD students. Open Source Collaboration \u00b6 Organizers are invited to submit IAP proposals on the 3DC IAP Conference GitHub repository as issues. Potential organizers would be able to view the proposed activities, and adjust the contents of their activities accordingly. 3DC would handle majority of the administrative workload, which includes the submission of the IAP proposals to OSL as well as the scheduling of the IAP activities. In collaboration with OpenSUTD, the open organization owned by the SUTD community, organizers are encouraged to share their activities' resources by uploading them in OpenSUTD's GitHub organization, so that the entire SUTD community can benefit from them.","title":"3DC IAP Conference"},{"location":"3DC-IAP/#what","text":"3DC IAP Conference is a collation of related IAP activities to the SUTD community. It happened between 06 January - 23 January 2019 .","title":"What"},{"location":"3DC-IAP/#why","text":"All IAPS are currently conducted individually by separate parties, which are usually a series of talks / activities / workshops that encourage students to pursue their interests.","title":"Why"},{"location":"3DC-IAP/#issues","text":"The IAPs may come in odd fashion with beginner events amongst the tougher events. Timings may clash which disallows students from successively attending multiple IAPs. IAP materials are sometimes not shared to the participants.","title":"Issues"},{"location":"3DC-IAP/#how","text":"This IAP conference brings together IAP activities with the aim to widen the learning horizon and deepen the subject knowledge of the SUTD community by complementing the experiential learning component of a student\u2019s experience. The conference allows for the participation in meaningful exchange of ideas through diversified experiences and engagement in advanced technologies. It is also hoped that the centralized planning of IAP activities will lead to greater participation numbers in subsequent batches of SUTD students.","title":"How"},{"location":"3DC-IAP/#open-source-collaboration","text":"Organizers are invited to submit IAP proposals on the 3DC IAP Conference GitHub repository as issues. Potential organizers would be able to view the proposed activities, and adjust the contents of their activities accordingly. 3DC would handle majority of the administrative workload, which includes the submission of the IAP proposals to OSL as well as the scheduling of the IAP activities. In collaboration with OpenSUTD, the open organization owned by the SUTD community, organizers are encouraged to share their activities' resources by uploading them in OpenSUTD's GitHub organization, so that the entire SUTD community can benefit from them.","title":"Open Source Collaboration"},{"location":"ghpages/","text":"GitHub Pages \u00b6 Free web hosting for GitHub users Prerequisites \u00b6 Attention Do ensure that you have compiled the web pages using MkDocs. The relevant instructions can be found here . Sign up for a GitHub account. Type of Sites \u00b6 For GitHub Pages, there are two types of web pages that can be created: Personal and Project Sites. The following table summarizes the difference between Personal and Project Sites: Personal Sites Project Sites URL username .github.io username .github.io/ project Repository name username .github.io Any name GitHub Pages Source master branch master branch /docs folder Personal Sites \u00b6 Attention Your site will be at username .github.io. To host a Personal Site on GitHub, start by creating a new repository on GitHub with the repository username.github.io , where username is your GitHub username. Initialize the repository with a README.md file, and select Upload Files . Drag and drop all the site files in /site/ and upload the site files. Configure the GitHub Pages Source by navigating to the Settings of the repository. Ensure that the Source of the GitHub Pages is set to master branch. If your GitHub Pages is configured correctly, you should see this message under the GitHub Pages section of Settings : 1 Your site is ready to be published at username.github.io. Refresh the site in a few moments and the website should be up. Project Sites \u00b6 Attention Your site will be at username .github.io/ project . To host a Project Site on GitHub, start by creating a new repository on GitHub. Initialize the repository with a README.md file, and select Upload Files . Create a new folder with the name docs in your file manager and place all the site files into this folder. Upload the site files by dragging and dropping the entire docs folder. Configure the GitHub Pages Source by navigating to the Settings of the repository. Ensure that the Source of the GitHub Pages is set to master branch /docs folder. If your GitHub Pages is configured correctly, you should see this message under the GitHub Pages section of Settings : 1 Your site is ready to be published at username.github.io/project. Refresh the site in a few moments and the website should be up.","title":"GitHub Pages"},{"location":"ghpages/#github-pages","text":"Free web hosting for GitHub users","title":"GitHub Pages"},{"location":"ghpages/#prerequisites","text":"Attention Do ensure that you have compiled the web pages using MkDocs. The relevant instructions can be found here . Sign up for a GitHub account.","title":"Prerequisites"},{"location":"ghpages/#type-of-sites","text":"For GitHub Pages, there are two types of web pages that can be created: Personal and Project Sites. The following table summarizes the difference between Personal and Project Sites: Personal Sites Project Sites URL username .github.io username .github.io/ project Repository name username .github.io Any name GitHub Pages Source master branch master branch /docs folder","title":"Type of Sites"},{"location":"ghpages/#personal-sites","text":"Attention Your site will be at username .github.io. To host a Personal Site on GitHub, start by creating a new repository on GitHub with the repository username.github.io , where username is your GitHub username. Initialize the repository with a README.md file, and select Upload Files . Drag and drop all the site files in /site/ and upload the site files. Configure the GitHub Pages Source by navigating to the Settings of the repository. Ensure that the Source of the GitHub Pages is set to master branch. If your GitHub Pages is configured correctly, you should see this message under the GitHub Pages section of Settings : 1 Your site is ready to be published at username.github.io. Refresh the site in a few moments and the website should be up.","title":"Personal Sites"},{"location":"ghpages/#project-sites","text":"Attention Your site will be at username .github.io/ project . To host a Project Site on GitHub, start by creating a new repository on GitHub. Initialize the repository with a README.md file, and select Upload Files . Create a new folder with the name docs in your file manager and place all the site files into this folder. Upload the site files by dragging and dropping the entire docs folder. Configure the GitHub Pages Source by navigating to the Settings of the repository. Ensure that the Source of the GitHub Pages is set to master branch /docs folder. If your GitHub Pages is configured correctly, you should see this message under the GitHub Pages section of Settings : 1 Your site is ready to be published at username.github.io/project. Refresh the site in a few moments and the website should be up.","title":"Project Sites"},{"location":"markdown/","text":"Markdown \u00b6 Markdown is a lightweight markup language that: is very easy to pick up; can be converted into many file formats such as PDF, DOCX, EPUB, HTML, etc. using Pandoc ; can generate diagrams such as UML Sequence Diagrams, Flowcharts, Class and State Diagrams; can be used to create a static site, using the static generator MkDocs . Markdown Editor \u00b6 StackEdit.io GitHub Gist For those of you without a Markdown editor installed, I recommend the usage of either Stackedit.io or GitHub Gist . Stackedit.io provides live preview of your Markdown syntax together with the formatted content, allowing one to update the Markdown syntax and view the changes instantly. As for GitHub Gist, live previews are provided in a separate tab for comments on GitHub. The actual gists do not allow for one to preview the formatting of the Markdown syntax. But it would be familiar to get used to the GitHub interface, as we would use it for the creation of the website later. Headers \u00b6 What you type What you get # This is an h1 tag ## This is an h2 tag ### This is an h3 tag #### This is an h4 tag ##### This is an h5 tag ###### This is an h6 tag Headers are written in Markdown syntax using the hash or pound sign ( # ). They are equivalent to the HTML headings from <h1> to <h6> , and widely used in Markdown documents as sectioning elements. Emphasis \u00b6 What you type What you get *This will be italic* This will be italic _This will also be italic_ This will also be italic **This will be bold** This will be bold __This will also be bold__ This will also be bold _You **can** combine them_ You can combine them Bold and italic text can be formatted in Markdown syntax using asterisks ( * ) or underscores ( _ ). 1 asterisk or underscore for italics , 2 asterisks or underscores for bold text . Markdown also allows the flexibility of combining bold and italic text together. Lists \u00b6 Unordered Lists \u00b6 What you type What you get For unordered lists, asterisks ( * ), hyphens ( - ) and pluses ( + ) can be used interchangeably as list markers. To begin an unordered list, use a list marker, followed by a space between the list marker and the list item. To create a unordered sublist within the unordered list, add 2 spaces followed by the list marker. Ordered Lists \u00b6 What you type What you get Ordered list begin with 1. , followed by a space between the ordinal marker and the list item. To create an ordered sublist with the ordered list, add 2 spaces followed by the ordinal sublist marker in lowercase Roman numerals ( i. ). Links \u00b6 What you type What you get https://github.com https://github.com [GitHub](http://github.com) GitHub In Markdown, web URLs are automatically recognized as rendered as hyperlinks. You can also customise the link text by enclosing it in square brackets [ ] and placing the actual URL in brackets ( ) after the square brackets. Images \u00b6 What you type What you get ![SUTD logo](https://www.sutd.edu.sg/assets/sutd/img/logo-black.png) Images written in Markdown syntax are similar to links, except that they begin with an exclamation mark ( ! ). The text in square brackets [ ] is the alternate text of the image and will be displayed when the image is unable to load. Tables \u00b6 What you type What you get To create tables in Markdown syntax, the cells in each row are separated by a vertical bar or pipe ( | ). A table will be generated once the second row of Markdown syntax is input. It consists of three hyphen characters ( --- ) for each cell separated by vertical bars ( | ) between each cell. Regular Markdown syntax applies within the table as well. Inline code \u00b6 What you type What you get I think you should use an `<addr>` element here instead. I think you should use an <addr> element here instead. Inline code snippets can be included by adding back-ticks ( ` ) around the code snippet. Indenting by 4 spaces will turn an entire paragraph into a code block. Syntax highlighting \u00b6 What you type What you get Markdown supports the syntax highlighting of keywords in programming languages. By enclosing the code block in 3 back-ticks ( ``` ) at the beginning and end of the code block and indicating the programming language after the initial 3 back-ticks, the syntax of the code will be highlighted as expected. Blockquotes \u00b6 What you type What you get > We're living the future so the present is our past. Blockquotes are typically used to reply in email and conversation threads, or otherwise highlight some key phrases. They can be written in Python by adding a right angle bracket ( > ) before the quote. Works with HTML \u00b6 Markdown insufficient? You can add HTML code into Markdown and it will still work. But take note NOT to mix Markdown syntax and HTML code together in a single line. It will not work.","title":"Markdown"},{"location":"markdown/#markdown","text":"Markdown is a lightweight markup language that: is very easy to pick up; can be converted into many file formats such as PDF, DOCX, EPUB, HTML, etc. using Pandoc ; can generate diagrams such as UML Sequence Diagrams, Flowcharts, Class and State Diagrams; can be used to create a static site, using the static generator MkDocs .","title":"Markdown"},{"location":"markdown/#markdown-editor","text":"StackEdit.io GitHub Gist For those of you without a Markdown editor installed, I recommend the usage of either Stackedit.io or GitHub Gist . Stackedit.io provides live preview of your Markdown syntax together with the formatted content, allowing one to update the Markdown syntax and view the changes instantly. As for GitHub Gist, live previews are provided in a separate tab for comments on GitHub. The actual gists do not allow for one to preview the formatting of the Markdown syntax. But it would be familiar to get used to the GitHub interface, as we would use it for the creation of the website later.","title":"Markdown Editor"},{"location":"markdown/#headers","text":"What you type What you get # This is an h1 tag ## This is an h2 tag ### This is an h3 tag #### This is an h4 tag ##### This is an h5 tag ###### This is an h6 tag Headers are written in Markdown syntax using the hash or pound sign ( # ). They are equivalent to the HTML headings from <h1> to <h6> , and widely used in Markdown documents as sectioning elements.","title":"Headers"},{"location":"markdown/#emphasis","text":"What you type What you get *This will be italic* This will be italic _This will also be italic_ This will also be italic **This will be bold** This will be bold __This will also be bold__ This will also be bold _You **can** combine them_ You can combine them Bold and italic text can be formatted in Markdown syntax using asterisks ( * ) or underscores ( _ ). 1 asterisk or underscore for italics , 2 asterisks or underscores for bold text . Markdown also allows the flexibility of combining bold and italic text together.","title":"Emphasis"},{"location":"markdown/#lists","text":"","title":"Lists"},{"location":"markdown/#unordered-lists","text":"What you type What you get For unordered lists, asterisks ( * ), hyphens ( - ) and pluses ( + ) can be used interchangeably as list markers. To begin an unordered list, use a list marker, followed by a space between the list marker and the list item. To create a unordered sublist within the unordered list, add 2 spaces followed by the list marker.","title":"Unordered Lists"},{"location":"markdown/#ordered-lists","text":"What you type What you get Ordered list begin with 1. , followed by a space between the ordinal marker and the list item. To create an ordered sublist with the ordered list, add 2 spaces followed by the ordinal sublist marker in lowercase Roman numerals ( i. ).","title":"Ordered Lists"},{"location":"markdown/#links","text":"What you type What you get https://github.com https://github.com [GitHub](http://github.com) GitHub In Markdown, web URLs are automatically recognized as rendered as hyperlinks. You can also customise the link text by enclosing it in square brackets [ ] and placing the actual URL in brackets ( ) after the square brackets.","title":"Links"},{"location":"markdown/#images","text":"What you type What you get ![SUTD logo](https://www.sutd.edu.sg/assets/sutd/img/logo-black.png) Images written in Markdown syntax are similar to links, except that they begin with an exclamation mark ( ! ). The text in square brackets [ ] is the alternate text of the image and will be displayed when the image is unable to load.","title":"Images"},{"location":"markdown/#tables","text":"What you type What you get To create tables in Markdown syntax, the cells in each row are separated by a vertical bar or pipe ( | ). A table will be generated once the second row of Markdown syntax is input. It consists of three hyphen characters ( --- ) for each cell separated by vertical bars ( | ) between each cell. Regular Markdown syntax applies within the table as well.","title":"Tables"},{"location":"markdown/#inline-code","text":"What you type What you get I think you should use an `<addr>` element here instead. I think you should use an <addr> element here instead. Inline code snippets can be included by adding back-ticks ( ` ) around the code snippet. Indenting by 4 spaces will turn an entire paragraph into a code block.","title":"Inline code"},{"location":"markdown/#syntax-highlighting","text":"What you type What you get Markdown supports the syntax highlighting of keywords in programming languages. By enclosing the code block in 3 back-ticks ( ``` ) at the beginning and end of the code block and indicating the programming language after the initial 3 back-ticks, the syntax of the code will be highlighted as expected.","title":"Syntax highlighting"},{"location":"markdown/#blockquotes","text":"What you type What you get > We're living the future so the present is our past. Blockquotes are typically used to reply in email and conversation threads, or otherwise highlight some key phrases. They can be written in Python by adding a right angle bracket ( > ) before the quote.","title":"Blockquotes"},{"location":"markdown/#works-with-html","text":"Markdown insufficient? You can add HTML code into Markdown and it will still work. But take note NOT to mix Markdown syntax and HTML code together in a single line. It will not work.","title":"Works with HTML"},{"location":"mkdocs/","text":"MkDocs \u00b6 Project documentation with Markdown. Installation \u00b6 Attention To install MkDocs, ensure that you have Python 3 installed on your system with pip installed. With pip and Python 3 installed on your system, run the following command in the terminal: 1 pip install mkdocs Theming \u00b6 For this workshop we will be using the Material for MkDocs theme, which can be installed via the terminal: 1 pip install mkdocs - material Now edit the config.yml file in the source folder to use the Material theme in MkDocs by adding these two lines: 1 2 theme: name: \"material\" For more customization options using the Material theme, one can refer to Getting Started . Site Configuration \u00b6 The website is configured by editing the config.yml file. A sample config.yml file is as follows: 1 2 3 4 5 6 site_name: Test site_description: \"This is a test site.\" site_author: \"Admin\" copyright: \"Licensed under GNU GPL v3.0\" nav: - Home: index.md Adding new pages \u00b6 New pages can be added by creating new Markdown files and editing the nav section in config.yml . An example could be an About page with the source code in about.md . We edit config.yml as follows: 1 2 3 4 5 6 7 site_name: Test site_description: \"This is a test site.\" site_author: \"Admin\" copyright: \"Licensed under GNU GPL v3.0\" nav: - Home: index.md - About: about.md Adding new sub-sections \u00b6 Let's say you want to create two sub-sections under About, one to introduce the project (source code in project.md ) and one for a writeup on yourself (source code in author.md ). config.yml can be modified as follows: 1 2 3 4 5 6 7 8 9 site_name: Test site_description: \"This is a test site.\" site_author: \"Admin\" copyright: \"Licensed under GNU GPL v3.0\" nav: - Home: index.md - About: - The Project: project.md - The Author: author.md Serving the site \u00b6 To preview your documentation as you work on it, navigate to the subdirectory where all the source files are stored and run the following command: 1 mkdocs serve A local server instance will be created at http://localhost:8000/ by default. The local server will update automatically once changes in the source directory are detected. Building the site \u00b6 Attention To build the site files using MkDocs, ensure that the local server instance is NOT running. It can be killed by the keyboard shortcut Ctrl C . To build the site files, run the following command in the terminal: 1 mkdocs build By default, the site files can be found at /site/ .","title":"MkDocs"},{"location":"mkdocs/#mkdocs","text":"Project documentation with Markdown.","title":"MkDocs"},{"location":"mkdocs/#installation","text":"Attention To install MkDocs, ensure that you have Python 3 installed on your system with pip installed. With pip and Python 3 installed on your system, run the following command in the terminal: 1 pip install mkdocs","title":"Installation"},{"location":"mkdocs/#theming","text":"For this workshop we will be using the Material for MkDocs theme, which can be installed via the terminal: 1 pip install mkdocs - material Now edit the config.yml file in the source folder to use the Material theme in MkDocs by adding these two lines: 1 2 theme: name: \"material\" For more customization options using the Material theme, one can refer to Getting Started .","title":"Theming"},{"location":"mkdocs/#site-configuration","text":"The website is configured by editing the config.yml file. A sample config.yml file is as follows: 1 2 3 4 5 6 site_name: Test site_description: \"This is a test site.\" site_author: \"Admin\" copyright: \"Licensed under GNU GPL v3.0\" nav: - Home: index.md","title":"Site Configuration"},{"location":"mkdocs/#adding-new-pages","text":"New pages can be added by creating new Markdown files and editing the nav section in config.yml . An example could be an About page with the source code in about.md . We edit config.yml as follows: 1 2 3 4 5 6 7 site_name: Test site_description: \"This is a test site.\" site_author: \"Admin\" copyright: \"Licensed under GNU GPL v3.0\" nav: - Home: index.md - About: about.md","title":"Adding new pages"},{"location":"mkdocs/#adding-new-sub-sections","text":"Let's say you want to create two sub-sections under About, one to introduce the project (source code in project.md ) and one for a writeup on yourself (source code in author.md ). config.yml can be modified as follows: 1 2 3 4 5 6 7 8 9 site_name: Test site_description: \"This is a test site.\" site_author: \"Admin\" copyright: \"Licensed under GNU GPL v3.0\" nav: - Home: index.md - About: - The Project: project.md - The Author: author.md","title":"Adding new sub-sections"},{"location":"mkdocs/#serving-the-site","text":"To preview your documentation as you work on it, navigate to the subdirectory where all the source files are stored and run the following command: 1 mkdocs serve A local server instance will be created at http://localhost:8000/ by default. The local server will update automatically once changes in the source directory are detected.","title":"Serving the site"},{"location":"mkdocs/#building-the-site","text":"Attention To build the site files using MkDocs, ensure that the local server instance is NOT running. It can be killed by the keyboard shortcut Ctrl C . To build the site files, run the following command in the terminal: 1 mkdocs build By default, the site files can be found at /site/ .","title":"Building the site"},{"location":"opensutd/","text":"OpenSUTD \u00b6 Info This is an abridged version of the OpenSUTD Origin Story, which can be found here . What \u00b6 OpenSUTD began as a movement in April 2018. The original mission of OpenSUTD was to develop a culture of design-driven policy solutioning and collaboration in the SUTD community . Why \u00b6 We wanted to be different. We all joined SUTD excited to be part of a world-class, collaborative community of learners, innovators, and explorers. As the University grew, it became more organizational, more hierarchical. Somewhere along the way, I\u2019d seen even the best and brightest lose their spark; jaded, exhausted, and tired for a number of reasons. We lost some of the best people. @joel , ISTD Class of '19 Back in 2018, Joel started a simple repository on GitHub. The idea was for students to collaborate and share knowledge with each other on a public platform. How \u00b6 GitHub was chosen as the primary platform for OpenSUTD as an open organisation. The reasons for choosing GitHub are as follows: Allows team formation Models that of a loosely aligned organisation, we simply fork repositories and maintain them with \u2018fork bot\u2019. Functionalities that greatly lowered the technical debt. eg. static site hosting, apps. Projects \u00b6 Open regulation of SAC \u00b6 OpenSUTD has taken over management of the Student Activities Centre (SAC). The rules and regulations of the SAC can be found here . Fifth row guides \u00b6 To pass on knowledge between batches of Fifth Row leaders, OpenSUTD has documented the pulsecheck process and finance guidelines . Course notes \u00b6 OpenSUTD has built a GitHub repository where SUTD students can freely share notes on SUTD's modules. We also have student contributed material: Pengfei\u2019s programming , machine learning notes Brandon\u2019s linux , opencv , coding notes","title":"OpenSUTD"},{"location":"opensutd/#opensutd","text":"Info This is an abridged version of the OpenSUTD Origin Story, which can be found here .","title":"OpenSUTD"},{"location":"opensutd/#what","text":"OpenSUTD began as a movement in April 2018. The original mission of OpenSUTD was to develop a culture of design-driven policy solutioning and collaboration in the SUTD community .","title":"What"},{"location":"opensutd/#why","text":"We wanted to be different. We all joined SUTD excited to be part of a world-class, collaborative community of learners, innovators, and explorers. As the University grew, it became more organizational, more hierarchical. Somewhere along the way, I\u2019d seen even the best and brightest lose their spark; jaded, exhausted, and tired for a number of reasons. We lost some of the best people. @joel , ISTD Class of '19 Back in 2018, Joel started a simple repository on GitHub. The idea was for students to collaborate and share knowledge with each other on a public platform.","title":"Why"},{"location":"opensutd/#how","text":"GitHub was chosen as the primary platform for OpenSUTD as an open organisation. The reasons for choosing GitHub are as follows: Allows team formation Models that of a loosely aligned organisation, we simply fork repositories and maintain them with \u2018fork bot\u2019. Functionalities that greatly lowered the technical debt. eg. static site hosting, apps.","title":"How"},{"location":"opensutd/#projects","text":"","title":"Projects"},{"location":"opensutd/#open-regulation-of-sac","text":"OpenSUTD has taken over management of the Student Activities Centre (SAC). The rules and regulations of the SAC can be found here .","title":"Open regulation of SAC"},{"location":"opensutd/#fifth-row-guides","text":"To pass on knowledge between batches of Fifth Row leaders, OpenSUTD has documented the pulsecheck process and finance guidelines .","title":"Fifth row guides"},{"location":"opensutd/#course-notes","text":"OpenSUTD has built a GitHub repository where SUTD students can freely share notes on SUTD's modules. We also have student contributed material: Pengfei\u2019s programming , machine learning notes Brandon\u2019s linux , opencv , coding notes","title":"Course notes"},{"location":"pandoc/","text":"Pandoc \u00b6 Info Pandoc can be installed on Windows, macOS and Linux by following the instructions here . A swiss-army knife to convert content between many file formats. It allows for conversion between the following file formats: PDF Markup formats HTML formats Ebooks XML formats \\TeX \\TeX formats Word processor formats Interactive notebook formats and many more... Demo: Converting from Markdown to HTML \u00b6 We have a Markdown file demo.md in ~/Documents and we want to convert it into a HTML file with the HTML <title> tag 'Demo' . Open Command Prompt. Win + R , cmd , Enter Navigate to ~/Documents . cd , Space , Documents , Enter Convert the Markdown file: 1 pandoc demo.md -f markdown -t html -s -o demo.html --metadata pagetitle = \"Demo\" -f markdown : Converts demo.md from a Markdown file. -t html : Converts demo.md to a HTML file. -s : Creates a standalone file. -o demo.html : Put the output in the file demo.html . --metadata pagetitle=\"Demo\" : demo.html will have the page title \"Demo\".","title":"Pandoc"},{"location":"pandoc/#pandoc","text":"Info Pandoc can be installed on Windows, macOS and Linux by following the instructions here . A swiss-army knife to convert content between many file formats. It allows for conversion between the following file formats: PDF Markup formats HTML formats Ebooks XML formats \\TeX \\TeX formats Word processor formats Interactive notebook formats and many more...","title":"Pandoc"},{"location":"pandoc/#demo-converting-from-markdown-to-html","text":"We have a Markdown file demo.md in ~/Documents and we want to convert it into a HTML file with the HTML <title> tag 'Demo' . Open Command Prompt. Win + R , cmd , Enter Navigate to ~/Documents . cd , Space , Documents , Enter Convert the Markdown file: 1 pandoc demo.md -f markdown -t html -s -o demo.html --metadata pagetitle = \"Demo\" -f markdown : Converts demo.md from a Markdown file. -t html : Converts demo.md to a HTML file. -s : Creates a standalone file. -o demo.html : Put the output in the file demo.html . --metadata pagetitle=\"Demo\" : demo.html will have the page title \"Demo\".","title":"Demo: Converting from Markdown to HTML"},{"location":"typora/","text":"Typora \u00b6 A Markdown editor that extends the capabilities of GitHub Flavored Markdown, adding support for \\LaTeX \\LaTeX and diagrams. LaTeX \u00b6 Attention \\LaTeX \\LaTeX must be enabled in the Typora Preferences for it to work. To enable it, navigate to File > Preferences > Markdown and enable Inline Math under Syntax Support . Text Mode ( $ ) \u00b6 What you type What you get The identity matrix is $\\left[\\begin{array}{cc} 1 & 0\\\\0 & 1\\end{array}\\right]$. The identity matrix is \\left[\\begin{array}{cc} 1 & 0\\\\0 & 1\\end{array}\\right] \\left[\\begin{array}{cc} 1 & 0\\\\0 & 1\\end{array}\\right] . To typeset mathematical symbols and/or equations together with text, place \\LaTeX \\LaTeX code between a pair of dollar symbols ( $ ). Math Mode ( $$ ) \u00b6 What you type What you get $$e = mc^{2}$$ e = mc^{2} e = mc^{2} To typeset mathematical symbols and/or equations in a single block, place \\LaTeX \\LaTeX code between a pair of two dollar symbols ( $$ ). Diagrams \u00b6 Info Diagrams must be enabled in the Typora Preferences for it to work. To enable it, navigate to File > Preferences > Markdown and enable Diagrams under Syntax Support . The following are examples of diagrams that can be created in Typora. UML Sequence \u00b6 Syntax: 1 2 3 4 5 \u200b```sequence Alice->Bob: Hello Bob, how are you? Note right of Bob: Bob thinks Bob-->Alice: I am good thanks! ``` Flowchart \u00b6 Syntax: 1 2 3 4 5 6 7 8 9 10 ```flow st=>start: Start op=>operation: Your Operation cond=>condition: Yes or No? e=>end st->op->cond cond(yes)->e cond(no)->op ``` Class Diagram \u00b6 Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ```mermaid classDiagram Animal <|-- Duck Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } ``` State Diagram \u00b6 Syntax: 1 2 3 4 5 6 7 8 9 10 ```mermaid stateDiagram [*] --> Still Still --> [*] Still --> Moving Moving --> Still Moving --> Crash Crash --> [*] ``` Pie Chart \u00b6 Syntax: 1 2 3 4 5 6 7 ```mermaid pie title Pie Chart \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 150 ``` ````","title":"Typora"},{"location":"typora/#typora","text":"A Markdown editor that extends the capabilities of GitHub Flavored Markdown, adding support for \\LaTeX \\LaTeX and diagrams.","title":"Typora"},{"location":"typora/#latex","text":"Attention \\LaTeX \\LaTeX must be enabled in the Typora Preferences for it to work. To enable it, navigate to File > Preferences > Markdown and enable Inline Math under Syntax Support .","title":"LaTeX"},{"location":"typora/#text-mode","text":"What you type What you get The identity matrix is $\\left[\\begin{array}{cc} 1 & 0\\\\0 & 1\\end{array}\\right]$. The identity matrix is \\left[\\begin{array}{cc} 1 & 0\\\\0 & 1\\end{array}\\right] \\left[\\begin{array}{cc} 1 & 0\\\\0 & 1\\end{array}\\right] . To typeset mathematical symbols and/or equations together with text, place \\LaTeX \\LaTeX code between a pair of dollar symbols ( $ ).","title":"Text Mode ($)"},{"location":"typora/#math-mode","text":"What you type What you get $$e = mc^{2}$$ e = mc^{2} e = mc^{2} To typeset mathematical symbols and/or equations in a single block, place \\LaTeX \\LaTeX code between a pair of two dollar symbols ( $$ ).","title":"Math Mode ($$)"},{"location":"typora/#diagrams","text":"Info Diagrams must be enabled in the Typora Preferences for it to work. To enable it, navigate to File > Preferences > Markdown and enable Diagrams under Syntax Support . The following are examples of diagrams that can be created in Typora.","title":"Diagrams"},{"location":"typora/#uml-sequence","text":"Syntax: 1 2 3 4 5 \u200b```sequence Alice->Bob: Hello Bob, how are you? Note right of Bob: Bob thinks Bob-->Alice: I am good thanks! ```","title":"UML Sequence"},{"location":"typora/#flowchart","text":"Syntax: 1 2 3 4 5 6 7 8 9 10 ```flow st=>start: Start op=>operation: Your Operation cond=>condition: Yes or No? e=>end st->op->cond cond(yes)->e cond(no)->op ```","title":"Flowchart"},{"location":"typora/#class-diagram","text":"Syntax: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ```mermaid classDiagram Animal <|-- Duck Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } ```","title":"Class Diagram"},{"location":"typora/#state-diagram","text":"Syntax: 1 2 3 4 5 6 7 8 9 10 ```mermaid stateDiagram [*] --> Still Still --> [*] Still --> Moving Moving --> Still Moving --> Crash Crash --> [*] ```","title":"State Diagram"},{"location":"typora/#pie-chart","text":"Syntax: 1 2 3 4 5 6 7 ```mermaid pie title Pie Chart \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 150 ``` ````","title":"Pie Chart"}]}